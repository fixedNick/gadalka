version: '3.8'

networks:
  dev:

volumes:
  mysql-data:

services:
  mysql-server:
    build: ./mysql
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: taro
      MYSQL_USER: kos
      MYSQL_PASSWORD: sok
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - dev
    command: --innodb_flush_log_at_trx_commit=2 --sync_binlog=0 --innodb_buffer_pool_size=1G
    restart: always

  horoscope_microservice:
    build: ./horoscope
    container_name: HoroscopeMicroservices
    environment:
      - API_USERNAME=kos.channel@yandex.ru
      - API_PASSWORD=NJdwebnkiJBS1wned3
      - dbhost=mysql-server
      - dbname=taro
      - dbuser=kos
      - dbpass=sok
    volumes:
      - ./horoscope:/app
      - ./horoscope/config.json:/app/config.json
    command: sh -c ". /etc/venv/bin/activate && python3 horoscope.py"
  
  web:
    image: nginx:latest
    ports: 
      - "80:80"
    networks:
      - dev
    volumes:
      - ./public:/var/www/html/public
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  php:
    build: ./php-fpm
    volumes:
      - ./public:/var/www/html/public
    environment:
      - dbhost=mysql-server
      - dbname=taro
      - dbuser=kos
      - dbpass=sok
    expose:
      - 9000
    networks:
      - dev

  # articles_microservice:
  #   build: ./articles
  #   container_name: ArticlesMicroservices
  #   restart: always
  #   environment:
  #     - API_USERNAME=kos.channel@yandex.ru
  #     - API_PASSWORD=NJdwebnkiJBS1wned3
  #     - dbhost=host.docker.internal
  #     - dbname=taro
  #     - dbuser=root
  #     - dbpass=root
  #   volumes:
  #     - ./articles:/app
  #   command: sh -c ". /etc/venv/bin/activate && python3 articles.py"
